<?php

namespace Tkuska\TerytBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\AbstractQuery;

/**
 * UlicaRepository.
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UlicaRepository extends EntityRepository
{
    /**
     * Funkcja pobiera jako parametr nazwę województwa bądź jej część i zwraca wszystki pasujące rekordy.
     *
     * @param string $name
     * @param string $wojewodztwo
     *
     * @return DoctrineCollection
     */
    public function getUlicaByName($name = '', $wojewodztwo = null, $powiat = null, $gmina = null, $rodzaj_gminy = null)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('u.nazwa_1, u.nazwa_2, u.cecha')
                ->distinct()
                ->from('TkuskaTerytBundle:Ulica', 'u')
                ->where('u.nazwa_1 like :nazwa')
                ->orWhere('u.nazwa_2 like :nazwa')
                ->setParameters(['nazwa' => $name.'%']);
        if ($wojewodztwo) {
            $qb->andWhere('u.woj = :wojewodztwo')
                    ->setParameter('wojewodztwo', $wojewodztwo);
        }
        if ($powiat) {
            $qb->andWhere('u.pow = :powiat')
                    ->setParameter('powiat', $powiat);
        }
        if ($gmina) {
            $qb->andWhere('u.gmi = :gmina')
                    ->setParameter('gmina', $gmina);
        }
        if ($rodzaj_gminy) {
            $qb->andWhere('u.rodz_gmi = :rodzaj_gminy')
                    ->setParameter('rodzaj_gminy', $rodzaj_gminy);
        }
        $qb->orderBy('u.nazwa_2, u.nazwa_1');

        return $qb->getQuery()
                ->useQueryCache(true)
                ->useResultCache(true)
                ->getResult(AbstractQuery::HYDRATE_ARRAY);
    }

    /**
     * Zapytanie dołączające ulice do miejscowości których dotyczą.
     *
     * @return \Doctrine\ORM\NativeQuery
     */
    public function dolaczUliceDoMiejscowosci()
    {
        $rsm = new ResultSetMapping();
        $this->_em->createNativeQuery('UPDATE  `teryt_ulice` u 
            SET  `miejscowosc_id` = ( 
            SELECT  `id` 
            FROM  `teryt_miejscowosci` m
            WHERE u.WOJ = m.WOJ AND u.POW = m.POW AND u.GMI = m.GMI AND u.RODZ_GMI = m.RODZ_GMI AND m.SYM = u.SYM)', $rsm)
                ->getResult(AbstractQuery::HYDRATE_SCALAR);
    }
}
